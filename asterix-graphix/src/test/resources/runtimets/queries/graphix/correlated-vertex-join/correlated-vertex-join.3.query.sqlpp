/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Subquery expressing anti-join of patterns from different graphs.
FROM GRAPH  VERTEX (:User)
                   PRIMARY KEY (user_id)
                   AS Yelp.Users,
            VERTEX (:Review)
                   PRIMARY KEY (review_id)
                   AS Yelp.Reviews,
            EDGE   (:Review)-[:MADE_BY]->(:User)
                   SOURCE KEY (review_id)
                   DESTINATION KEY (user_id)
                   AS ( FROM    Yelp.Reviews R
                        SELECT  R.review_id, R.user_id )
MATCH       (u:User)<-(r)
WHERE       NOT EXISTS ( FROM GRAPH   VERTEX (:User)
                                      PRIMARY KEY (user_id)
                                      AS ( FROM    Yelp.Users U
                                           WHERE   U.user_id = 1
                                           SELECT  VALUE U )
                          MATCH       (innerU:User)
                          WHERE       innerU = u
                          SELECT      VALUE 1 )
SELECT      u.user_id
ORDER BY    u.user_id;