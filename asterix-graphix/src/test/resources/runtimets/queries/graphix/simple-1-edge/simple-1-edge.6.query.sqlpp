/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// One edge definition, single vertex definition on both sides, with a dangling vertex.
FROM GRAPH  VERTEX (:User)
                   PRIMARY KEY (user_id)
                   AS Yelp.Users,
            VERTEX (:Review)
                   PRIMARY KEY (review_id)
                   AS ( FROM   Yelp.Reviews R
                        SELECT R.user_id AS review_user_id, R.review_id ),
            EDGE   (:Review)-[:MADE_BY]->(:User)
                   SOURCE KEY (review_id)
                   DESTINATION KEY (user_id)
                   AS ( FROM    Yelp.Reviews R
                        SELECT  R.user_id, R.review_id )
MATCH       (u:User)<-[:MADE_BY]-(r:Review), (n)
SELECT      u.user_id AS u_user_id,
            r.review_id AS r_review_id,
            r.user_id AS r_user_id,
            n.user_id AS n_user_id,
            n.review_id AS n_review_id
ORDER BY    u_user_id,
            r_review_id,
            r_user_id,
            n_user_id,
            n_review_id;
