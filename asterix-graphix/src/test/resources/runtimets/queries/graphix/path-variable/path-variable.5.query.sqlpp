/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Two bidirectional edges path.
FROM GRAPH  VERTEX (:User)
                   PRIMARY KEY (user_id)
                   AS Yelp.Users,
            EDGE   (:User)-[:FRIENDS_WITH]->(:User)
                   SOURCE KEY (user_id)
                   DESTINATION KEY (friend)
                   AS ( FROM    Yelp.Friends F
                        WHERE   F.friend_group = "A"
                        SELECT  F.user_id, F.friend )
MATCH       (u)-[e1]-(v)-[e2]-(w) AS p
UNNEST      p.Edges AS edgeRecord
SELECT      LEN(p.Edges) AS pathLength,
            edgeRecord,
            u.user_id AS u_user_id,
            v.user_id AS v_user_id,
            w.user_id AS w_user_id
ORDER BY    u_user_id,
            v_user_id,
            w_user_id,
            edgeRecord.user_id;